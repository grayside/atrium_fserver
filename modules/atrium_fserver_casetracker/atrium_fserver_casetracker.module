<?php
// $Id$

/**
 * @file
 *  Atrium Feature Tracker converts Feature Server projects & distributions into Casetracker Projects.
 */

include_once 'atrium_fserver_casetracker.features.inc';

/**
 * Implementation of hook_nodeapi().
 */
function atrium_fserver_casetracker_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {
  switch ($op) {
    case 'view':
      // Confirm we are actually on a page of relevance
      if (menu_get_object() === $node) {
        switch ($node->type) {
          case 'fserver_project':
          case 'fserver_distro':
            // Omit casetracker project summary -- not useful at the moment (may be one day...)
            unset($node->content['casetracker_project_summary']);
            break;
        }
      }
      // Omit book-related links if the atrium_book feature is not available.
      $space = spaces_get_space();
      if (!$space->controllers->variable->values['space']['spaces_features']['atrium_book']) {
        unset($node->book);
      }
      break;
  }
}

/**
 * Implementation of hook_form_alter().
 */
function atrium_fserver_casetracker_form_alter(&$form, &$form_state, $form_id) {
  if (!empty($form['#node']) && !empty($form['book'])) {
    switch ($form['#node']->type) {
      case 'fserver_project':
      case 'fserver_distro':
        if (!empty($form['#node']->nid) && isset($form['book']['bid']['#options'][$form['#node']->nid])) {
          $form['book']['bid']['#default_value'] = $form['#node']->nid;
        }
        else {
          $form['book']['bid']['#default_value'] = 'new';
        }
        $form['book']['#access'] = FALSE;
        break;
    }
  }
}

function atrium_fserver_casetracker_link($type, $object, $teaser = FALSE) {
  $links = array();
  if ($type == 'node') {
    if ($object->type == 'fserver_project' || $object->type == 'fserver_distro') {
      $item = menu_get_item('node/add/casetracker-basic-case');
      if ($item && $item['access']) {
        $links['fserver-add-case'] = array(
          'title' => t('Add new @case', array ('@case' => strtolower($item['title']))),
          'href' => 'node/add/casetracker-basic-case', 
          'query' => 'edit[casetracker][pid]=' . $object->nid,
        );
      }
    }
    elseif ($object->type == 'fserver_release') {
      $links['fserver-project-issues'] = array(
         'title' => t('View issues'),
         'href' => 'casetracker/all',
         'query' => array(
           'pid' => $object->field_fserver_project[0]['nid'],
           'case_status_closed' => 1,
         ),
      );
    }
  }
  return $links;
}


/**
 * Implementation of hook_strongarm_alter().
 */
function atrium_fserver_casetracker_strongarm_alter(&$arms) {
  $arms['book_allowed_types']->value[] = 'fserver_project';
  $arms['book_allowed_types']->value[] = 'fserver_distro';

  // casetracker_project_node_types not currently strongarmed, but it shouldn't be by this module.
  if (!empty($arms['casetracker_project_node_types'])) {
    $arms['casetracker_project_node_types']->value[] = 'fserver_project';
    $arms['casetracker_project_node_types']->value[] = 'fserver_distro';
  }
}

/**
 * Implementation of hook_views_default_views_alter().
 */
function atrium_fserver_casetracker_views_default_views_alter(&$views) {
dpm($views['casetracker_override_project_options']->display['default']); 
 // Make casetracker_basic_case project options open to any CT project type.
  unset($views['casetracker_override_project_options']->display['default']->display_options['filters']['type']);
  $views['casetracker_override_project_options']->display['default']->display_options['filters']['project_1'] = array(
    'operator' => '=',
    'value' => '',
    'group' => '0',
    'exposed' => FALSE,
    'expose' => array(
      'operator' => FALSE,
      'label' => '',
    ),
    'id' => 'project_1',
    'table' => 'node',
    'field' => 'project',
    'relationship' => 'none',
  );
}